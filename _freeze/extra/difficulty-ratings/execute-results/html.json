{
  "hash": "5a83a5c77e0d7eb7e3cef7cb6441a453",
  "result": {
    "markdown": "---\ntitle: \"Class difficulty ratings\"\neditor: visual\nexecute: \n  freeze: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\ntheme_set(theme_light())\nlibrary(googlesheets4)\ngs4_deauth()\n\nclass_rate <- read_sheet(\"https://docs.google.com/spreadsheets/d/1STMXP32cz06pceqA77Zuy2w-OSiQnL0eZtJhsCCK4Nk/edit?usp=sharing\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ Reading from \"Rate this week's classes (Responses)\".\n✔ Range 'Form responses 1'.\n```\n:::\n\n```{.r .cell-code}\ncolnames(class_rate) <- c(\"timestamp\", \"week\", \"rel_rating\", \"first_rating\")\n\nclass_rate <- class_rate %>%\n  mutate(\n    timestamp = as.character(timestamp),\n    rating = ifelse(\n      is.na(rel_rating),\n      case_when(\n        first_rating == \"Very difficult\" ~ -2,\n        first_rating == \"Difficult\" ~ -1,\n        first_rating == \"Neither easy nor difficult\" ~ 0,\n        first_rating == \"Easy\" ~ 1,\n        first_rating == \"Very easy\" ~ 2,\n      ),\n      case_when(\n        rel_rating == \"Much more difficult\" ~ -2,\n        rel_rating == \"More difficult\" ~ -1,\n        rel_rating == \"Same as last week\" ~ 0,\n        rel_rating == \"Easier\" ~ 1,\n        rel_rating == \"Much easier\" ~ 2,\n      )\n    ),\n    rating_2 = case_when(\n      week == 1 ~ rating,\n      week == 2 ~ rating + median(rating[week == 1]),\n      week == 3 ~ rating + median(rating[week == 1]) + median(rating[week == 2]),\n      week == 4 ~ rating + median(rating[week == 1]) + median(rating[week == 2]) + median(rating[week == 3]),\n      week == 5 ~ rating + median(rating[week == 1]) + median(rating[week == 2]) + median(rating[week == 3]) + median(rating[week == 4]),\n      week == 7 ~ rating + median(rating[week == 1]) + median(rating[week == 2]) + median(rating[week == 3]) + median(rating[week == 4]) + median(rating[week == 5]),\n      week == 8 ~ rating + median(rating[week == 1]) + median(rating[week == 2]) + median(rating[week == 3]) + median(rating[week == 4]) + median(rating[week == 5]) + median(rating[week == 7]),\n      week == 9 ~ rating + median(rating[week == 1]) + median(rating[week == 2]) + median(rating[week == 3]) + median(rating[week == 4]) + median(rating[week == 5]) + median(rating[week == 7]) + median(rating[week == 8])\n    )\n  )\n\nclass_counts <- class_rate %>%\n  count(week, rating) %>%\n  group_by(week) %>%\n  mutate(prop = n / sum(n) * 100)\n\nclass_counts_2 <- class_rate %>%\n  count(week, rating_2) %>%\n  group_by(week) %>%\n  mutate(prop = n / sum(n) * 100)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass_counts_2 %>%\n  ggplot(aes(as.character(week), -rating_2)) +\n  geom_vline(xintercept = c(\"1\", \"2\", \"3\"), linewidth = 1.5, colour = \"gray\") +\n  geom_point(aes(size = prop, fill = prop), shape = 21, colour = \"black\") +\n  scale_size_continuous(range = c(0, 15), guide = \"none\") +\n  scale_fill_distiller(palette = \"Purples\", direction = 1) +\n  annotate(\n    \"line\",\n    x = seq(1, 3, by = 0.5),\n    y = c(-2, -2, -1, -1, 0),\n    linewidth = 2, colour = \"#31a354\"\n  ) +\n  annotate(\"text\", x = 0.6, y = -2, label = \"very\\neasy\", fontface = \"italic\") +\n  annotate(\"text\", x = 0.6, y = -1, label = \"easy\", fontface = \"italic\") +\n  annotate(\"text\", x = 0.6, y = 0, label = \"neither\", fontface = \"italic\") +\n  annotate(\"text\", x = 0.6, y = 1, label = \"difficult\", fontface = \"italic\") +\n  labs(y = \"Difficulty\", x = \"Week\", fill = \"Percentage\") +\n  ylim(-2.5, 1) +\n  theme(axis.text.y = element_blank())\n```\n\n::: {.cell-output-display}\n![](difficulty-ratings_files/figure-html/plot-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"img/difficulty-ratings.png\", width = 7, height = 4)\n```\n:::\n",
    "supporting": [
      "difficulty-ratings_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}