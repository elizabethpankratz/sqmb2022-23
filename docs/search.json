[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "assessments.html",
    "href": "assessments.html",
    "title": "SQMB",
    "section": "",
    "text": "This course will be assessed on the basis of a 3 formative assessments and 2 summative assessments.\nFormative assessments are assessments for which you might receive feedback on, but which will not be marked. These will give you a chance to keep on track with the course contents and get interim feedback that will better prepare you for the summative assessment. See below for info.\nYou will have to submit two summative assessments. They will weight 40% and 60% of the final mark.\nSee below for details."
  },
  {
    "objectID": "assessments.html#formative-assessments",
    "href": "assessments.html#formative-assessments",
    "title": "SQMB",
    "section": "Formative assessments",
    "text": "Formative assessments\n\n\n\n\n\n\nFormative 1: Week 4\n\n\n\n\n\nData summary and visualisation\n\nGiven a data table, submit a short and concise report with summary measurements and plots illustrating patterns in the data.\nCriticise a given plot and provide an appropriate plot for the given data.\nAnswer a set of multiple-choice and true/false questions.\n\n\n\n\n\n\n\n\n\n\nFormative 2: Week 6\n\n\n\n\n\nLinear model fitting and reporting\n\nGiven a data table, submit a short and concise report of a linear model fitted to the data.\nMake sure you include:\n\nA description of the model specification.\nA description of the results.\nAt least one plot generated with conditiona_effects().\n\nCriticise a given linear model and provide code for an appropriate linear model. Just the code is sufficient (you don’t need to run it nor report it).\n\n\n\n\n\n\n\n\n\n\nFormative 3: Week 8\n\n\n\n\n\nData analysis report\n\nGiven a data table, submit a short and concise data analysis report, including summary measures, plots and a linear model.\nMake sure you include:\n\nSummary measures and plots of the raw data.\nA description of the linear model specification and results.\nPlots generated by conditional_effects()."
  },
  {
    "objectID": "assessments.html#summative-assessments",
    "href": "assessments.html#summative-assessments",
    "title": "SQMB",
    "section": "Summative assessments",
    "text": "Summative assessments\n\n\n\n\n\n\nSummative 1 - Thu 30 March\n\n\n\n\n\nDue on Thursday 30 March at noon\nThe first summative contains a series of guided exercises. You can find the summative materials and exercises here: TBA.\n\n\n\n\n\n\n\n\n\nSummative 2 - Thu 27 April\n\n\n\n\n\nDue on Thursday 27 April at noon\nThe second summative will be in the form of a data analysis report. You will choose a data set from a list or you will find a data set yourself for this assessment (guidance will be provided and I will have to approve the data set you picked).\nYou can find the list of data sets here: TBA."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Statistics and Quantitative Methods (Semester 2)",
    "section": "",
    "text": "Welcome to the main site of the course Statistics and Quantitative Methods (Semester 2).\nThis will be your go-to place throughout the semester.\nThis course is an introduction to study design, statistics and quantitative data analysis as commonly employed in linguistics, using the R software."
  },
  {
    "objectID": "index.html#course-description",
    "href": "index.html#course-description",
    "title": "Statistics and Quantitative Methods (Semester 2)",
    "section": "Course description",
    "text": "Course description\nThe course will cover the basics of statistics and quantitative data analysis, and how to design studies that effectively address the intended research questions. Students will learn the principles of data visualisation and statistical modelling and develop the practical skills necessary to perform such analyses. The course will draw examples from different branches of linguistics and will provide students with hands-on experience in open science practices.\nThe course will teach students how to carry out Bayesian statistical inference using a variety of statistical models, and how to interpret results from traditional Null Hypothesis Significance Testing (i.e. p-values and confidence intervals)."
  },
  {
    "objectID": "index.html#r-and-rstudio",
    "href": "index.html#r-and-rstudio",
    "title": "Statistics and Quantitative Methods (Semester 2)",
    "section": "R and RStudio",
    "text": "R and RStudio\nThe workshops will be held in the PPLS Computer Lab. The Lab is equipped with PCs running Windows and Ubuntu. The Lab PCs will have all the necessary software.\nYou can choose to use your own laptop instead of the Lab PCs.\nThis requires you to have both R and RStudio installed on your laptop.\n\n\n\n\n\n\nInstallation instructions\n\n\n\nNOTE: If you have installed either R or RStudio prior to January 2023, please delete both R and RStudio from your laptop and reinstall them.\nTo (re)install R and RStudio, follow the instructions for Step 1 and 2 here: https://posit.co/download/rstudio-desktop/."
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "SQMB",
    "section": "",
    "text": "This course is an introduction to quantitative data analysis, as commonly employed in linguistics, using the R software.\nWe will cover the following topics:\n\nThe basics of quantitative data analysis.\nData preparation.\nData summaries.\nPrinciples of data visualisation.\nStatistical modelling with linear models.\nStatistical inference using Bayesian inference.\n\nAt completion of the course you will have gained the following skills:\n\nImport common data formats, tidy and transform data.\nChoosing and reporting appropriate summary measures.\nUsing compelling visualisations to communicate a specific message about patterns in the data.\nMaster linear models for different types of data (continuous measures and binary outcomes).\nUsing Bayesian inference to answer research questions and avoid common interpretation pitfalls.\n\nExamples from different branches of linguistics will be used to provide you with hands-on experience in quantitative data analysis and Open Research practices."
  },
  {
    "objectID": "syllabus.html#weekly-plan",
    "href": "syllabus.html#weekly-plan",
    "title": "SQMB",
    "section": "Weekly plan",
    "text": "Weekly plan\n\nWeek 1: Quantitative methods and uncertainty\n\n\n\n\n\n\nLearning Objectives\n\n\n\n\n\nQuestions\n\nWhat is quantitative data analysis?\nWhat is the inference process?\nHow can we talk about uncertainty and variability?\nWhich are the limits of quantitative methods?\n\nSkills\n\nThink critically about statistics, uncertainty and variability.\nUse R to perform simple calculations.\nMaster the basics of the programming language R.\nUse RStudio.\n\n\n\n\n\n\n\n\n\n\nHomework\n\n\n\n\n\nIntake form\n\nYou must complete the intake form before coming to the Tuesday lecture.\nThe link to the form will be circulated via Learn.\n\nInstall R and RStudio\n\nIf you with to use your own laptop for the workshops, instead of the Lab PCs, you need to install both R and RStudio.\nNOTE: If you have installed either R or RStudio prior to January 2023, please make sure you delete both R and RStudio from your laptop.\nPlease, follow the instructions for Step 1 and 2 here: https://posit.co/download/rstudio-desktop/.\n\n\n\n\n\n\n\n\n\n\nMaterials\n\n\n\n\n\n\nLecture slides.\nWorkshop tutorial.\n\n\n\n\n\n\n\n\n\n\nSuggested readings\n\n\n\n\n\n\nS4LR Ch. 1 and R4DS Ch. 1, Ch. 2.\nDarwin Holmes 2020. Researcher Positionality - A Consideration of Its Influence and Place in Qualitative Research - A New Researcher Guide\nJafar 2018. What is positionality and should it be expressed in quantitative studies?\n\nFrom the lecture:\n\nSilberzahn et al. 2018. Many Analysts, One Data Set: Making Transparent How Variations in Analytic Choices Affect Results\nCoretta et al. (in principle). Multidimensional signals and analytic flexibility: Estimating degrees of freedom in human speech analyses\nCumming 2014. The New Statistics: Why and How\nKurschke and Liddell 2018. The Bayesian New Statistics: Hypothesis testing, estimation, meta-analysis, and power analysis from a Bayesian perspective"
  },
  {
    "objectID": "tutorials/tutorial-w01.html",
    "href": "tutorials/tutorial-w01.html",
    "title": "SQM tutorial - Week 1",
    "section": "",
    "text": "R can be used to analyse all sorts of data, from tabular data (also known as “spreadsheets”), textual data, geographic data and even images.\n\nThis course will focus on the analysis of tabular data, since all of the techniques relevant to this type of data also apply to the other types.\n\nThe R community is a very inclusive community and it’s easy to find help. There are several groups that promote R in minority/minoritised groups, like R-Ladies, Africa R, and Rainbow R just to mention a few.\nMoreover, R is open source and free!"
  },
  {
    "objectID": "tutorials/tutorial-w01.html#r-vs-rstudio",
    "href": "tutorials/tutorial-w01.html#r-vs-rstudio",
    "title": "SQM tutorial - Week 1",
    "section": "R vs RStudio",
    "text": "R vs RStudio\nBeginners usually have trouble understanding the difference between R and RStudio.\nLet’s use a car analogy.\nWhat makes the car go is the engine and you can control the engine through the dashboard.\nYou can think of R as an engine and RStudio as the dashboard.\n\n\n\n\n\n\n\nR\n\n\n\n\nR is a programming language.\nWe use programming languages to interact with computers.\nYou run commands written in a console and the related task is executed.\n\n\n\n\n\n\n\n\n\nRStudio\n\n\n\n\nRStudio is an Integrated Development Environment or IDE.\nIt helps you using R more efficiently.\nIt has a graphical user interface or GUI.\n\n\n\nThe next section will give you a tour of RStudio."
  },
  {
    "objectID": "tutorials/tutorial-w01.html#rstudio-1",
    "href": "tutorials/tutorial-w01.html#rstudio-1",
    "title": "SQM tutorial - Week 1",
    "section": "RStudio",
    "text": "RStudio\n\n\n\n\n\n\n\nOpen the RStudio preferences (macOS: RStudio > Preferences..., win: Tools > Global options...).\nUn-tick Restore .RData into workspace at startup.\nSelect Never in Save workspace to .RData on exit."
  },
  {
    "objectID": "tutorials/tutorial-w01.html#r-basics",
    "href": "tutorials/tutorial-w01.html#r-basics",
    "title": "SQM tutorial - Week 1",
    "section": "R basics",
    "text": "R basics\n\nR as a calculator\nWrite the following in the Console, then press ENTER: 1 + 2.\nFantastic! You should see that the answer to the addition has been printed in the Console.\nNow, try running the same code again, but this time in the code chunk below. There are several ways you can run code in a code chunk: one is to click on the green triangle sign in the top right corner of the code chunk.\nAlternatively, you can also simply place the text cursor inside the code chunk in the line you want to run and hit CTRL/CMD + ENTER on your keyboard to run that line of code.\n\n1 + 2\n\n[1] 3\n\n\nYou did it!\nNow, try some more operations. Feel free to add your own to the mix!\n\n67 - 13\n\n[1] 54\n\n2 * 4\n\n[1] 8\n\n268 / 43\n\n[1] 6.232558\n\n\nYou can also chain multiple operations.\n\n6 + 4 - 1 + 2\n\n[1] 11\n\n4 * 2 + 3 * 2\n\n[1] 14\n\n\n\n\nVariables\n\nForget-me-not.\n\nMost times, we want to store a certain value so that we can use it again later.\nWe can achieve this by creating variables. A variable holds one or more values and it’s stored in the computer memory for later use.\nYou can create a variable by using the assignment operator <-.\n\n# Assign the value 156 to the variable my_num\nmy_num <- 156\n\n# Oh, btw... These are comments, i.e. lines of code starting with a #.\n# Comments are skipped by R.\n\nCheck the list of variables in the Environment tab of the top-right panel of RStudio. You should see the my_num variable and its value there.\nNow, you can just call it back when you need it!\n\nmy_num\n\n[1] 156\n\n\nLet’s try some operations.\n\nincome <- 1200\nexpenses <- 500\nincome - expenses\n\n[1] 700\n\n\nSee? You can use operations with variables too!\nAnd you can also go all the way with variables.\n\nsavings <- income - expenses\n\nAnd check the value…\n\nsavings\n\n[1] 700\n\n\nVariables can hold more than one item.\nJust use the combine c() function to create a vector containing multiple values. A vector is a variable containing values of the same type.\nThe following are all numeric vectors.\n\none_i <- 6\n# Vector with 2 values\ntwo_i <- c(6, 8)\n# Vector with 3 values\nthree_i <- c(6, 8, 42)\n\nCheck the list of variables in the Environment tab. You will see now that before the values of two_i and three_i you get the vector type num for numeric.\nNote the following are the same:\n\none_i <- 6\none_i\n\n[1] 6\n\none_ii <- c(6)\none_ii\n\n[1] 6\n\n\n\n\nFunctions\n\nR can’t function without… functions.\n\nFunctions are operations performed on one or more arguments.\nA function in R has the form function() where:\n\nfunction is the name of the function, like sum.\n() are round parentheses, inside of which you write arguments, separated by commas.\n\n\nsum(3, 5)\n\n[1] 8\n\n\nThe sum() function sums the number listed as arguments. Above, the arguments are 3 and 5.\nAnd of course arguments can be vectors!\n\nmy_nums <- c(3, 5, 7)\n\nsum(my_nums)\n\n[1] 15\n\nmean(my_nums)\n\n[1] 5\n\n\n\n\nStrings and logicals\n\nNot just numbers.\n\nVariables work not only with numbers. They can also store strings. A string is basically a set of characters (a word, a sentence, a full text).\nIn R, strings have to be quoted using double quotes \"\".\nChange the following strings to your name and surname\n\nname <- \"Stefano\"\nsurname <- \"Coretta\"\n\nname\n\n[1] \"Stefano\"\n\n\nStrings can be used as arguments in functions, like numbers can.\n\ncat(\"My name is\", name, surname)\n\nMy name is Stefano Coretta\n\n\nRemember that you can reuse the same variable name to override the variable value.\n\nname <- \"Raj\"\n\ncat(\"My name is\", name, surname)\n\nMy name is Raj Coretta\n\n\nYou can combine multiple strings into a character vector, using c().\n\nfruit <- c(\"apple\", \"oranges\", \"bananas\")\nfruit\n\n[1] \"apple\"   \"oranges\" \"bananas\"\n\n\nCheck the Environment tab. Character vectors have chr before the values."
  }
]